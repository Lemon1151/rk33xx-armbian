#!/bin/bash
#===========================================================================
#
# This file is licensed under the terms of the GNU General Public
# License version 2. This program is licensed "as is" without any
# warranty of any kind, whether express or implied.
#
# This file is a part of the Rebuild Armbian
# https://github.com/ophub/amlogic-s9xxx-armbian
#
# Function: Partition Expansion Tool
# Copyright (C) 2021- https://github.com/unifreq/openwrt_packit
# Copyright (C) 2021- https://github.com/ophub/amlogic-s9xxx-armbian
#
# Command: armbian-tf
#
#========================= Set default parameters ==========================
#
# Set font color
STEPS="[\033[95m STEPS \033[0m]"
INFO="[\033[94m INFO \033[0m]"
SUCCESS="[\033[92m SUCCESS \033[0m]"
OPTIONS="[\033[93m OPTIONS \033[0m]"
ERROR="[\033[91m ERROR \033[0m]"
#
#===========================================================================

# Encountered a serious error, abort the script execution
error_msg() {
    echo -e "${ERROR} ${1}"
    exit 1
}

# Check disk
do_checkdisk() {
    # Find the partition where root is located
    ROOT_PTNAME="$(df / | tail -n1 | awk '{print $1}' | awk -F '/' '{print $3}')"
    [[ -z "${ROOT_PTNAME}" ]] && error_msg "Cannot find the partition corresponding to the root file system!"

    # Find the disk where the partition is located, only supports mmcblk?p? sd?? hd?? vd?? and other formats
    case "${ROOT_PTNAME}" in
    mmcblk?p[1-4])
        DISK_NAME="${ROOT_PTNAME:0:-2}"
        PT_PRE="${DISK_NAME}p"
        LB_PRE="MMC_"
        ;;
    [hsv]d[a-z][1-4])
        DISK_NAME="${ROOT_PTNAME:0:-1}"
        PT_PRE="${DISK_NAME}"
        LB_PRE="USB_"
        ;;
    nvme?n?p[1-4])
        DISK_NAME="${ROOT_PTNAME:0:-2}"
        PT_PRE="${DISK_NAME}p"
        LB_PRE="NVME_"
        ;;
    *)
        error_msg "${ERROR} Unable to recognize the disk type of ${ROOT_PTNAME}!"
        ;;
    esac

    sync && sleep 3
}

# Expand the current partition
expansion_partition() {
    echo -e "${INFO} Start repairing hard disk size..."
    printf 'f\n' | parted ---pretend-input-tty /dev/${DISK_NAME} unit MiB print || repair_status="no"
    [[ "${repair_status}" == "no" ]] && error_msg "Disk size repair failed, stop partitioning."

    pt_num="$(parted -s /dev/${DISK_NAME} print | awk '$1~/[1-9]+/ {print $1}' | wc -l)"
    [[ "${pt_num}" -ne "2" ]] && error_msg "Not 2 partitions, stop automatic expansion."

    echo -e "${INFO} Start to expand the current partition..."
    printf 'Yes\n-1\n' | parted ---pretend-input-tty /dev/${DISK_NAME} resizepart 2 100%

    echo -e "${INFO} Expansion file system..."
    ROOTFS_TYPE="$(df -hT / | grep "/" | awk '{print $2}')"
    if [[ "${ROOTFS_TYPE}" == "btrfs" ]]; then
        btrfs filesystem resize max /
        [[ "${?}" -ne "0" ]] && error_msg "[ btrfs ] operation failed."
    else
        resize2fs /dev/${ROOT_PTNAME}
        [[ "${?}" -ne "0" ]] && error_msg "[ resize2fs ] operation failed."
    fi

    # Do not delete files, only modify values to prevent secondary expansion of the armbian-resize-filesystem
    echo "no" >/root/.no_rootfs_resize
    echo -e "${SUCCESS} The current partition expansion is successful."
}

# Show welcome message
echo -e "${STEPS} Welcome to Partition Expansion Tool."

do_checkdisk
expansion_partition
